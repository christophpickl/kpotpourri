
buildscript {

    ext.kotlin_version = '1.1.1'
    ext.dokka_version = '0.9.13'

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // https://github.com/Kotlin/dokka/blob/master/README.md
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"

        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'com.jfrog.bintray'

allprojects {
    group = 'com.github.christophpickl.kpotpourri'
    version = '1.0'

    repositories {
        jcenter()
        mavenCentral()
    }
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'java'
}

subprojects {

    apply plugin: "kotlin"
    apply plugin: 'org.jetbrains.dokka'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'


    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        // compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

        testCompile 'org.testng:testng:6.10'
        testCompile 'com.natpryce:hamkrest:1.3.0.0'
    }



    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    // FIXME automatically execute dokka task on package
    dokka {
//        moduleName = 'data'
        outputFormat = 'javadoc'
//        outputDirectory = "$buildDir/javadoc"
//        processConfigurations = ['compile', 'extra']
//        includes = ['packages.md', 'extra.md']
//        samples = ['samples/basic.kt', 'samples/advanced.kt']
//        linkMapping {
//            dir = "src/main/kotlin"
//            url = "https://github.com/cy6erGn0m/vertx3-lang-kotlin/blob/master/src/main/kotlin"
//            suffix = "#L"
//        }
//        sourceDirs = files('src/main/kotlin')
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

}

project(':swing') {
    dependencies {
        compile project(':common')
    }
}


//task wrapper(type: Wrapper) {
//    gradleVersion = '2.4'
//}



// plugin howto:
//   https://github.com/bintray/gradle-bintray-plugin
// how to ReSTful upload:
//   https://bintray.com/docs/api/#_upload_content
// $ ./gradlew bintrayUpload
bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    publications = ['MyPublication']
    pkg {
        repo = 'cpickl'
        name = 'kpotpourri'
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/christophpickl/kpotpourri.git'
//        labels = ['gear', 'gore', 'gorilla']
        publicDownloadNumbers = true
//        attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes
        version {
            name = '1.0'
            desc = 'KPotpourri'
            released = new Date()
            vcsTag = 'tags/1.0'
//            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}

def pomConfig = {
//    licenses {
//        license {
//            name "The Apache Software License, Version 2.0"
//            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
//            distribution "repo"
//        }
//    }
    developers {
        developer {
            id "cpickl"
            name "Christoph Pickl"
            email "christoph.pickl@gmail.com"
        }
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            // TODO this does not work :-(
//            artifact sourcesJar
//            artifact javadocJar
            groupId 'com.github.christophpickl.kpotpourri'
            artifactId 'kpotpourri'
            version '1.0'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Some common extensions to kotlin which i am desperately missing')
                root.appendNode('name', 'kpotpourri')
                root.appendNode('url', 'https://github.com/christophpickl/kpotpourri/')
                root.children().last() + pomConfig
            }
        }
    }
}
