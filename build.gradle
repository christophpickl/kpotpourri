
// version(hasProperty("-version") ? property("-version") : "SNAPSHOT")
// println "building version ${version}"

buildscript {


    ext.kotlin_version = '1.0.6'
    ext.dokka_version = '0.9.13'

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // https://github.com/Kotlin/dokka/blob/master/README.md
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
    }
}

allprojects {
    group = 'com.github.christophpickl.kpotpourri'
    version = '1.0-SNAPSHOT'


    repositories {
        mavenCentral()
        jcenter()
    }
}

subprojects { subproject ->

    println("[KPOT] Configuring subproject '${subproject.name}' with version '${version}'")

    apply plugin: "kotlin"
    apply plugin: 'org.jetbrains.dokka'
//    apply plugin: 'maven'
//    apply plugin: 'signing'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'


    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        // compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

        compile 'org.slf4j:slf4j-api:1.7.22'


        testCompile 'org.testng:testng:6.10'
        testCompile 'com.natpryce:hamkrest:1.3.0.0'
    }

    test {
        useTestNG()

        scanForTestClasses true
        reports {
            junitXml.enabled = true
            html.enabled = true
        }

//        beforeTest { desc ->
//            print "[KPOT] ${desc.className.substring("com.github.christophpickl.kpotpourri..".length())}: ${desc.name.replace("_", " ")}"
//        }
//        afterTest { desc, result ->
//            println " -> ${result.resultType}"
//        }
    }

    jar {
        manifest {
            attributes 'Implementation-Title': 'kpotpourri - ${subproject.name}',
                    'Implementation-Vendor': 'Christoph Pickl',
                    'Implementation-Version': version
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task testJar(type: Jar) {
        classifier = 'tests'
        from sourceSets.test.output
    }

    task testSourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'testSources'
        from sourceSets.test.allSource
    }

    task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = 'javadoc'
        outputDirectory = javadoc.destinationDir
        inputs.dir 'src/main/kotlin'
    }

    task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
        archives testJar
    }

//    signing {
//        required { hasProperty("sign") || gradle.taskGraph.hasTask("uploadArchives") }
//        sign configurations.archives
//    }

//    task ossrhAuthentication << {
//        if (!(project.hasProperty('ossrh.username') && project.hasProperty('ossrh.password'))) {
//            throw new InvalidUserDataException("no OSSRH username and/or password!")
//        }
//    }

//    uploadArchives {
//        dependsOn ossrhAuthentication
//    https://github.com/npryce/hamkrest/blob/master/build.gradle

//    task wrapper(type: Wrapper) {
//        gradleVersion = '2.14'
//        distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
//    }
}


